type OrganizationInfo {
  id: String!
  key: String! # unique identifier
  name: String!
}

type Organization {
  id: String!
  createdAt: String!
  lastModifiedAt: String!
  key: String! # unique identifier
  name: String!
  members: [MemberInfo]!
  activeTournaments: [TournamentInfo]!
  finishedTournaments: [TournamentInfo]!
}

extend type Query {
  isOrganizationKeyUsed(key: String!): Boolean!
}

extend type Mutation {
  # Every member can create an organization
  createOrganization(
    key: String! # unique identifier
    name: String!
    memberId: String!
  ): Organization
  # Promote a member to admin
  setMemberAsAdmin(organizationId: String!, memberId: String!): Organization
  # Every member can add new members to the organization
  addMemberToOrganization(
    organizationId: String!
    memberId: String!
  ): Organization
  # Only admin members can remove members from the organization
  removeMemberFromOrganization(
    organizationId: String!
    memberId: String!
  ): Organization
}
