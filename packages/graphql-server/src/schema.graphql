# import Role,Discipline,TournamentStatus,TournamentSize,TournamentOrderByInput from "./generated/prisma.graphql"

type Query {
  me: User!
  isOrganizationKeyUsed(key: String!): Boolean!
  organization(key: String!): Organization
}

type Mutation {
  # TODO: add mutation to save userRef (auth0Id)

  # Every user can create an organization
  createOrganization(
    key: String! # unique identifier
    name: String!
  ): Organization
  # Promote a member to admin
  promoteMemberToAdmin(organizationKey: String!, memberId: String!): Organization
  # Demote an admin to member
  demoteAdminToMember(organizationKey: String!, memberId: String!): Organization
  # Every user can add new members to the organization
  addMemberToOrganization(
    organizationKey: String!
    memberId: String!
  ): Organization
  # Only admin members can remove users from the organization
  removeMemberFromOrganization(
    organizationKey: String!
    memberId: String!
  ): Organization
}

type User {
  id: String! # the auth0 id
  createdAt: DateTime!
  updatedAt: DateTime!
  email: String!
  name: String!
  picture: String!
  availableOrganizations: [OrganizationInfo!]!
}

type Organization {
  key: String! # unique identifier
  createdAt: DateTime!
  updatedAt: DateTime!
  name: String!
  members: [Member!]!
  tournaments(
    status: [TournamentStatus!] # `or` condition
    orderBy: TournamentOrderByInput!
    page: Int!
    perPage: Int!
  ): [TournamentInfo!]!
  singleMatches: [MatchSingleInfo!]!
}

# A `Member` contains basic user profile data plus
# specific fields related to the organization (e.g. role)
type Member {
  id: String! # the auth0 id
  email: String!
  name: String!
  picture: String!
  role: Role!
}

type OrganizationInfo {
  key: String! # unique identifier
  name: String!
}

type TournamentInfo {
  id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  name: String!
  discipline: Discipline!
  status: TournamentStatus!
  size: TournamentSize!
  teamSize: Int!
}

type MatchSingleInfo {
  id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  discipline: Discipline!
}
